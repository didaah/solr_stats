<?php
// $Id$

/**
 * @Implement of hook_menu()
 */
function solr_stats_menu() {
  $items = array();

  $items['admin/solr/stats'] = array(
    'title' => '数据统计',
    'access_arguments' => array('solr stats admin view'),
    'page_callback' => 'solr_stats_admin',
    'file' => 'solr_stats.admin.inc',
  );

  foreach (solr_stats_get_group() as $key => $info) {
    $items['admin/solr/stats/' . $key] = array(
      'title' => $info['title'] . '数据统计',
      'access_arguments' => array('solr stats admin ' . $key . ' view'),
      'page_callback' => 'solr_stats_admin_stats',
      'page_arguments' => array(3),
      'file' => 'solr_stats.admin.inc',
    );

    $items['admin/solr/stats/' . $key . '/ajax'] = array(
      'title' => $info['title'] . '统计处理',
      'access_arguments' => array('solr stats admin ' . $key . ' view'),
      'page_callback' => 'solr_stats_admin_stats_ajax',
      'page_arguments' => array(3),
      'file' => 'solr_stats.admin.inc',
    );
  }

  return $items;
}

/**
 * @Implement of hook_perm()
 */
function solr_stats_perm() {
  $perm =  array(
    'solr stats admin view' => '统计项目选择',
  );

  foreach (solr_stats_get_group() as $key => $info) {
    $perm['solr stats admin ' . $key . ' view'] = $info['title'] . ' 数据统计';
  }

  return $perm;
}

// public solr_stats_get_group() {{{ 
/**
 * solr_stats_get_group
 *  获取所有统计分组
 * 
 * @access public
 * @return array
 */
function solr_stats_get_group() {
  static $data;

  if (!isset($data)) {
    $data = array();
    if ($group = solr_get_search_group()) {
      foreach ($group as $key => $info) {
        if (!empty($info['stats'])) {
          $data[$key] = $info;
        }
      }
    }
  }

  return $data;
}
// }}}

/**
 * @Implement of hook_alter_admin_menus()
 */
function solr_stats_alter_admin_menus($module, &$menus) {
  if ($module == 'solr') {
    $menus[] = array(t('solr_stats', '数据统计'), 'admin/solr/stats');
  }
}

// public solr_stats_query_form($group) {{{ 
/**
 * solr_stats_query_form
 *  查询表单
 * 
 * @param array $group 
 *  数据统计分组
 * @access public
 * @return array
 */
function solr_stats_query_form($group) {
  $form = array(
    'fields' => array(
      'query' => array(),
      'param' => array(),
    ),
    'settings' => array(
      '#ajax_validate' => true,
      '#ajax_submit' => array(
        'options' => array(
          'dataType' => 'script',
          'url' => url('admin/solr/stats/' . $group['key'] . '/ajax'),
        ),
      ),
    ),
  );

  $form['fields']['query']['q'] = array(
    '#title' => t('solr_stats', '查询语句'),
    '#type' => 'textarea',
  );

  $form['fields']['param']['stats.field'] = array(
    '#title' => t('solr_stats', '汇总统计'),
    '#type' => 'textfield',
    '#description' => t('solr_stats', '请输入字段名称')
  );

  $form['fields']['param']['facet.field'] = array(
    '#title' => t('solr_stats', '维度统计'),
    '#description' => t('solr_stats', '请输入字段名称'),
    '#type' => 'textfield',
  );

  $form['fields']['param']['default'] = array(
    '#title' => t('solr_stats', '其它参数'),
    '#type' => 'textarea',
    '#description' => t('solr_stats', '一行一个参数，参数名与参数值以等号(=)分割，例如：facet=true'),
  );

  module_alter_all('solr_stats_query_form', $group, $form);

  $form['fields']['button'] = array(
    '#type' => 'submit',
    '#weight' => 9999,
  );

  $form['fields']['body_wrapper'] = array(
    '#type' => 'value',
    '#weight' => 10001,
  );

  dd_add_css(dd_get_path('module', 'solr_stats') . '/solr_stats.css');

  return $form;
}
// }}}

// public solr_stats_get_field_label($group, $field_key) {{{ 
/**
 * solr_stats_get_field_label
 * 
 * @param array $group 
 * @param string $field_key 
 * @access public
 * @return void
 */
function solr_stats_get_field_label($group, $field_key) {
  $fields = array();

  if (!empty($group['fields'])) {
    foreach ($group['fields'] as $key => $info) {
      $fields[$key] = $info['name'];
    }
  }

  module_alter_all('solr_stats_get_fields_label', $group, $fields, $field_key);
  return $fields[$field_key];
}
// }}}

function solr_stats_get_stats_label($field_key) {
  $label = array(
    'min' => t('solr_stats', '最小值'),
    'max' => t('solr_stats', '最大值'),
    'count' => t('solr_stats', '匹配记录'),
    'missing' => t('solr_stats', '未匹配记录'),
    'sum' => t('solr_stats', '求和'),
    'sumOfSquares' => t('solr_stats', '平方和'),
    'mean' => t('solr_stats', '平均值'),
    'stddev' => t('solr_stats', '标准偏差'),
  );

  return (!empty($label[$field_key]) ? $label[$field_key] : '') . '(' . $field_key . ')';
}

// public solr_stats_export_csv(array $data) {{{ 
/**
 * solr_stats_export_csv
 * 
 * @param array $data 
 *  要导出的数据，格式：
 *    array(
 *      'title' => '文件名称', // 会自动加上后缀.csv
 *      'rows' => array( // 输出的内容，一行一条
 *        array('city', 'name', 'abc'),
 *        array(1, 2, 3),
 *      ),
 *    )
 * @access public
 * @return void
 */
function solr_stats_export_csv(array $data) {
  if (empty($data['rows']) || empty($data['title'])) exit;
  $data['title'] .= '.csv';

  $rows = array();
  foreach ($data['rows'] as $v) {
    if (is_array($v)) {
      $rows[] = implode("\t", $v);
    } else {
      $rows[] = $v; 
    }
  }

  header('Cache-control: private');
  header('Content-type: text/csv; charset=UTF-16LE');
  
  if (empty($_SERVER['HTTP_USER_AGENT']) 
    && preg_match('/firefox/i', $_SERVER['HTTP_USER_AGENT'])) {
    header('Content-Disposition: attachment; filename*="utf8\'\'' . $data['title'] . '"');
  } else {
    header('Content-Disposition: attachment; filename="' . str_replace('+', '%20', urlencode($data['title'])) . '"');
  }

  // 输出BOM
  echo chr(255) . chr(254);
  echo mb_convert_encoding(implode("\n", $rows), 'UTF-16LE', 'UTF-8');

  exit;
}
// }}}
